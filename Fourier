# 파이썬에서 1차원 벡터는 다음과 같이 리스트 변수로 표현할 수 있다.
a = [1, 3, 5, 3, 15]

# 리스트 변수를 이용한 연산은 리스트와 리스트의 덧셈과 리스트와 숫자의 곱셈이 정의되어있으나
# 연산 결과는 공학 분야에서 사용하는 벡터의 연산과는 다른 결과가 나온다.

2 * a

# 파이썬의 리스트는 숫자 뿐만 아니라 다양한 데이터 형을 수용한다.
# 반면 내장 array클래스는 균일한 숫자 데이터 형만 다룰 수 있다.

import array
a = array.array('i', [1, 2, 3])
b = array.array('i', [4, 5, 6])

a     # i는 정수형 데이터를 의미한다.


# Numpy는 과학 연산을 위해 설계된 다차원 배열 처리를 위한 파이썬의 확장패키지이다.
# 숫자 연산을 할 때 리스트형이나 내장 array클래스의 객체를 사용하는 것 보다 Numpy 패키지를 사용하면 더 효율적이고 편리하게 연산을 수행할 수 있다.

#import numpy    # numpy 모듈의 함수나 변수를 사용할 때는 numpy.함수 또는 numpy.변수 형식을 사용한다.
#import numpy as np
#from numpy import *         # Numpy 모듈에 있는 모든 객체를 불러들여 현재에 이름 공간과 합치는 방법, 모듈 이름 없이 함수와 변수를 바로 사용한다? 
                             # Numpy 모듈의 일부 객체만 사용할 떄는 * 대신 객체 이름만 쓸 수 도 있다.
                             
# 원소가 4개인 1차원 배열 a와 원소가 10개인 2차원 배열 b를 만드는 예제

import numpy as np
a = np.array([0, 1, 2, 3])

# array()는 리스트를 numpy의 배열로 변환하는 함수이다.
# arage()는 주어진 구간에서 균일한 간격의 숫자를 만드는 함수이다.
# Numpy 주요 객체는 동일한 데이터 형을 갖는 원소들로 구성된 다차원 배열이다.
# 각 원소의 인덱스는 음이 아닌 정수의 튜플로 표시된다. 

b[(1, 2)]


# transpose()함수는 행렬의 전치 행렬을 만드는 함수
# dot() 함수는 행렬의 내적을 계산하는 함수이다.
